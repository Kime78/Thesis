services:
  postgres:
    image: "postgres:latest"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: file_metadata

  adminer:
    image: adminer
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: rmsoft_blue-dark
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 20971520 # 20 MiB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20971520 # 20 MiB

    healthcheck:
      test: [ "CMD-SHELL", "/bin/kafka-cluster cluster-id --bootstrap-server kafka:9092 || exit 1" ]
      interval: 2s
      timeout: 2s
      retries: 15

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8888:80"
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf:ro 
    depends_on:
      - file_receiver1
      - file_receiver2
      - file_receiver3

  file_receiver1:
    build: ./FileReceiver
    ports:
      - "8001:8000"
    depends_on:
      kafka:
        condition: service_healthy

  file_receiver2:
    build: ./FileReceiver
    ports:
      - "8002:8000"
    depends_on:
      kafka:
        condition: service_healthy

  file_receiver3:
    build: ./FileReceiver
    ports:
      - "8003:8000"
    depends_on:
      kafka:
        condition: service_healthy

  file_downloader:
    build: ./FileDownloader
    ports:
      - "7000:8000"

  file_distributor:
    build: ./FileDistributor
    environment:
      - REPLICATION_FACTOR=4
    depends_on:
      kafka:
        condition: service_healthy

  storage-node1:
    build: ./StorageNode
    ports:
      - "50051:50051"
      - "8901:8000"
    volumes:
      - ./node1_chunks:/chunks

  storage-node2:
    build: ./StorageNode
    ports:
      - "50052:50051"
      - "8902:8000"
    volumes:
      - ./node2_chunks:/chunks

  storage-node3:
    build: ./StorageNode
    ports:
      - "50053:50051"
      - "8903:8000"
    volumes:
      - ./node3_chunks:/chunks
  storage-node4:
    build: ./StorageNode
    ports:
      - "50054:50051"
      - "8904:8000"
    volumes:
      - ./node4_chunks:/chunks

volumes:
  node1_chunks:
  node2_chunks:
  node3_chunks:
  node4_chunks:
